version: '3.8'

services:
  doc-converter:
    image: ghcr.io/timur-nocodia/doc_processing_service:latest
    expose:
      - "5000"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    volumes:
      - temp_files:/tmp
    environment:
      - PORT=${PORT:-5000}
      - MAX_CONTENT_LENGTH=${MAX_CONTENT_LENGTH:-52428800}  # 50MB
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
      - API_KEY=${API_KEY:-default_dev_key}
      - OCR_LANGUAGES=${OCR_LANGUAGES:-eng+rus}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - n8n_internal_net

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - redis_data:/data
    command: redis-server --maxmemory 384mb --maxmemory-policy allkeys-lru --save 900 1 --save 300 10 --save 60 10000
    networks:
      - n8n_internal_net

  celery-worker:
    image: ghcr.io/timur-nocodia/doc_processing_service:latest
    command: ["/usr/local/bin/celery", "-A", "app.celery", "worker", "--loglevel=info", "--max-tasks-per-child=10", "--pool=prefork", "--concurrency=2"]
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import celery; print(\"OK\")' || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s
    volumes:
      - temp_files:/tmp
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
      - API_KEY=${API_KEY:-default_dev_key}
      - OCR_LANGUAGES=${OCR_LANGUAGES:-eng+rus}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - n8n_internal_net
      
  celery-beat:
    build: .
    image: doc_processing_service:local
    command: ["/usr/local/bin/celery", "-A", "app.celery", "beat", "--loglevel=info", "--schedule=/tmp/celerybeat-schedule"]
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import celery; print(\"OK\")' || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 90s
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
      - API_KEY=${API_KEY:-default_dev_key}
      - OCR_LANGUAGES=${OCR_LANGUAGES:-eng+rus}
    depends_on:
      redis:
        condition: service_healthy
      celery-worker:
        condition: service_started
    networks:
      - n8n_internal_net

volumes:
  temp_files:
    driver: local
  redis_data:
    driver: local

networks:
  n8n_internal_net:
    external: true
